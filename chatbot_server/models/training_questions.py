# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chatbot_server.models.base_model_ import Model
from chatbot_server import util


class TrainingQuestions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, intent: str=None, questions: List[str]=None):  # noqa: E501
        """TrainingQuestions - a model defined in Swagger

        :param intent: The intent of this TrainingQuestions.  # noqa: E501
        :type intent: str
        :param questions: The questions of this TrainingQuestions.  # noqa: E501
        :type questions: List[str]
        """
        self.swagger_types = {
            'intent': str,
            'questions': List[str]
        }

        self.attribute_map = {
            'intent': 'intent',
            'questions': 'questions'
        }

        self._intent = intent
        self._questions = questions

    @classmethod
    def from_dict(cls, dikt) -> 'TrainingQuestions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrainingQuestions of this TrainingQuestions.  # noqa: E501
        :rtype: TrainingQuestions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intent(self) -> str:
        """Gets the intent of this TrainingQuestions.


        :return: The intent of this TrainingQuestions.
        :rtype: str
        """
        return self._intent

    @intent.setter
    def intent(self, intent: str):
        """Sets the intent of this TrainingQuestions.


        :param intent: The intent of this TrainingQuestions.
        :type intent: str
        """

        self._intent = intent

    @property
    def questions(self) -> List[str]:
        """Gets the questions of this TrainingQuestions.


        :return: The questions of this TrainingQuestions.
        :rtype: List[str]
        """
        return self._questions

    @questions.setter
    def questions(self, questions: List[str]):
        """Sets the questions of this TrainingQuestions.


        :param questions: The questions of this TrainingQuestions.
        :type questions: List[str]
        """

        self._questions = questions
