# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Chatbot(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, descrption: str=None, id: str=None):  # noqa: E501
        """Chatbot - a model defined in Swagger

        :param created: The created of this Chatbot.  # noqa: E501
        :type created: datetime
        :param descrption: The descrption of this Chatbot.  # noqa: E501
        :type descrption: str
        :param id: The id of this Chatbot.  # noqa: E501
        :type id: str
        """
        self.swagger_types = {
            'created': datetime,
            'descrption': str,
            'id': str
        }

        self.attribute_map = {
            'created': 'created',
            'descrption': 'descrption',
            'id': 'id'
        }

        self._created = created
        self._descrption = descrption
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'Chatbot':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Chatbot of this Chatbot.  # noqa: E501
        :rtype: Chatbot
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self) -> datetime:
        """Gets the created of this Chatbot.


        :return: The created of this Chatbot.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this Chatbot.


        :param created: The created of this Chatbot.
        :type created: datetime
        """
        if created is None:
            raise ValueError("Invalid value for `created`, must not be `None`")  # noqa: E501

        self._created = created

    @property
    def descrption(self) -> str:
        """Gets the descrption of this Chatbot.


        :return: The descrption of this Chatbot.
        :rtype: str
        """
        return self._descrption

    @descrption.setter
    def descrption(self, descrption: str):
        """Sets the descrption of this Chatbot.


        :param descrption: The descrption of this Chatbot.
        :type descrption: str
        """

        self._descrption = descrption

    @property
    def id(self) -> str:
        """Gets the id of this Chatbot.


        :return: The id of this Chatbot.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Chatbot.


        :param id: The id of this Chatbot.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id
